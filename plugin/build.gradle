/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details on writing Custom Plugins, please refer to https://docs.gradle.org/8.5/userguide/custom_plugins.html in the Gradle documentation.
 */

plugins {
    id 'antlr'
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.5"
    // Use TestNG framework, also requires calling test.useTestNG() below.
    testImplementation 'org.testng:testng:7.10.2'
    implementation 'com.kazurayam:unittest-helper:0.5.0'
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'com.kazurayam.vba.greeting'
            implementationClass = 'com.kazurayam.vba.VBAProceduresIndexerPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
configurations.functionalTestRuntimeOnly.extendsFrom(configurations.testRuntimeOnly)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}

generateGrammarSource {
    arguments += [
            "-lib", "src/main/antlr/vba",
            "-package", "vba",
            "-visitor",
            "-long-messages"
    ]
    maxHeapSize = "64m"
}