plugins {
    id 'java-gradle-plugin'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation project(':lib')
    //implementation 'org.slf4j:slf4j-api:2.0.13'
    //implementation 'ch.qos.logback:logback-classic:1.5.6'
    testImplementation 'org.testng:testng:7.10.2'
    testImplementation 'com.kazurayam:unittest-helper:0.5.0'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'com.kazurayam.vba.greeting'
            implementationClass = 'com.kazurayam.vba.VBAProceduresIndexerPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
configurations.functionalTestRuntimeOnly.extendsFrom(configurations.testRuntimeOnly)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}